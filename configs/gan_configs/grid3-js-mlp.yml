gan_config:
  dp: false
  dataset: 
    name: gaussians_grid
    params:
      sigma: &sigma 0.15 #0.05
      n_modes: 8 #27
      sample_size: 50000 #25600
      dim: 3
      # weights: [2, 1, 1, 1.5, 1, 1, 0.5, 1]
  train_transform:
    Normalize:
      mean: &mean [0., 0., 0.]
      std: &std [1.415, 1.415, 1.415]
  prior: normal
  eval: true
  generator:
    name: MLPGenerator
    params:
      mean: *mean
      std: *std
      z_dim: 128 #7
      n_layers: 3
      n_hid: 128
      n_out: 3
    #ckpt_path: 
  discriminator:
    name: MLPDiscriminator
    params:
      mean: *mean
      std: *std
      n_layers: 3
      n_hid: 128
      n_in: 3
    #ckpt_path: 
  fake_score: -0.04662973267026246
  real_score: &real_score 0.2734628602862358
  mean_score: 0.11341656380798666


train_batch_size: 256
# n_epochs: &n_epochs 500 #1000
n_train_iters: &n_train_iters 25000
criterion_g: &criterion_g
  name: JensenNSLoss
criterion_d: &criterion_d
  name: JensenNSLoss
optimizer_g: &optimizer_g
  name: Adam
  params:
    lr: 0.0001
    betas: [0.5, 0.999]
optimizer_d: &optimizer_d
  name: Adam
  params:
    lr: 0.0001
    betas: [0.5, 0.999]
trainer_kwargs: &trainer_kwargs
  n_dis: 1
  sample_size: 5000
  grad_acc_steps: 1
  sample_steps: &sample_steps 1
  r1_coef: 0.05

range: &range [-2.5, 2.5]

